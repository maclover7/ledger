<!DOCTYPE html>
<head>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  <link href="https://harvesthq.github.io/chosen/chosen.css" rel="stylesheet">
  <style>
    .center { text-align: center; }
    html, body {
      max-width: 100%;
      overflow-x: hidden;
    }
  </style>
  <title>Ledger</title>
  <script src="https://harvesthq.github.io/chosen/docsupport/jquery-3.2.1.min.js" type="text/javascript"></script>
  <script src="https://harvesthq.github.io/chosen/chosen.jquery.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/qs/6.7.0/qs.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/stupidtable/1.1.3/stupidtable.min.js"></script>
  <script>
    const filters = <%- JSON.stringify(filters) %>;

    $(() => {
      const parsedQuerystring = Qs.parse(window.location.search.split('?')[1]);
      filters.forEach(({ name }) => {
        if (parsedQuerystring[`${name}`] && parsedQuerystring[`${name}`].length > 0) {
          parsedQuerystring[`${name}`].forEach((pd) => {
            const el = $(`#${name}-select option`).filter((idx, option) => { return option.value === pd; });
            if (el) $(el).prop('selected', true);
          });
        }

        $(`#${name}-select`).chosen('destroy').chosen({ width: "95%" });
      });

      $('#fieldsModalSubmit').on('click', (e) => {
        e.preventDefault();

        var filterValues = {};
        filters.forEach(({ name }) => {
          filterValues[name] = $(`#${name}-select`).val();
        });

        window.location.replace(`http://${window.location.host}${window.location.pathname}?${Qs.stringify(filterValues)}`);
      });

      const table = $("#transactionTable").stupidtable({
        "money": (a, b) => {
          const toMoney = (amount) => { return Number(amount.replace(/\$/g, '').replace(/,/g, '')); };
          return toMoney(a) - toMoney(b);
        }
      });

      table.on("aftertablesort", (_, data) => {
        const columnHeader = data['$th'];
        columnHeader.find(".arrow").remove();
        const dir = $.fn.stupidtable.dir;
        const arrow = data.direction === dir.ASC ? "&uarr;" : "&darr;";
        columnHeader.append('<span class="arrow">' + arrow +'</span>');
      });
    });
  </script>
</head>

<body>
  <div class="containter">
    <h1 class="center">Ledger</h1>

    <div class="row">
      <div class="col-md-7">
        <div class="center">
          <p>
            Ledger is a tool developed by <a href="https://pittnews.com">The Pitt News</a>
            to search all Pitt expenses worth more than $1,000.
            <br>
            By law, these transactions must be disclosed annually.
          </p>

          <p>
            Use the search button to sort transactions by <br> purchasing department, vendor, purchase type and/or year.
            <br>
            Click on the header for each column to further sort the transactions.
          </p>

          <p>Help us investigate: If you see transactions that need a closer look, <br> you can contact The Pitt News at <a href="mailto:news@pittnews.com">news@pittnews.com</a>.</p>
        </div>
      </div>

      <div class="col-md-5">
        <div class="center">
          <h3>
            Found <b><%= wrapComma(transactions.length) %></b> transactions,
            <br>
            worth <b>$<%= wrapComma(transactions.reduce((total, num) => { return total + num.amount ;}, 0)) %></b>
          </h3>

          <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#fieldsModal">
            Edit Search
          </button>
        </div>
      </div>
    </div>

    <table class="table table-striped" id="transactionTable">
      <thead>
        <tr>
          <th scope="col" style="cursor:pointer" data-sort="int">Year</th>
          <th scope="col" style="cursor:pointer" data-sort="int">Vendor Number</th>
          <th scope="col" style="cursor:pointer" data-sort="string">Vendor Name</th>
          <th scope="col" style="cursor:pointer" data-sort="money">Amount</th>
          <th scope="col" style="cursor:pointer" data-sort="string">Purchaser</th>
          <th scope="col" style="cursor:pointer" data-sort="string">Purchase Type</th>
        </tr>
      </thead>
      <tbody>
        <% if (!tooManyResults) { %>
          <% for (var transaction of transactions) { %>
            <tr class="transaction">
              <td><%= transaction.year %></td>
              <td><%= transaction.vendor_number %></td>
              <td><%= transaction.vendor_name %></td>
              <td>$<%= wrapComma(transaction.amount) %></td>
              <td><%= transaction.purchaser_department %></td>
              <td><%= transaction.type %></td>
            </tr>
            <% } %>
          <% } %>
      </tbody>
    </table>

    <% if (tooManyResults) { %>
      <p class="center">Woah, that's a lot of transactions! <br> Try narrowing down your search.</p>
    <% } %>

    <div class="modal fade" id="fieldsModal" tabindex="-1" role="dialog" aria-labelledby="fieldsModalLabel" aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="fieldsModalLabel">Edit fields</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>

          <div class="modal-body">
            <div class="form-group">
              <label>Purchaser Department</label><br>
              <select id="purchaserDepartments-select" multiple>
                <% for (var purchaserDepartment of purchaserDepartments) { %>
                  <option value="<%= purchaserDepartment %>"><%= purchaserDepartment %></option>
                <% } %>
              </select>
            </div>

            <div class="form-group">
              <label>Vendor</label><br>
              <select id="vendor_numbers-select" multiple>
                <% for (var vendor of vendors) { %>
                  <option value="<%= vendor.number %>"><%= vendor.name %></option>
                <% } %>
              </select>
            </div>

            <div class="form-group">
              <label>Purchase type</label><br>
              <select id="purchase_types-select" multiple>
                <% for (var purchaseType of purchaseTypes) { %>
                  <option value="<%= purchaseType %>"><%= purchaseType %></option>
                <% } %>
              </select>
            </div>

            <div class="form-group">
              <label>Year</label>
              <select id="years-select" multiple>
                <% for (const dataYear of dataYears) { %>
                  <option value="<%= dataYear %>"><%= dataYear %></option>
                <% } %>
              </select>
            </div>
          </div>

          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary" id="fieldsModalSubmit">Run search</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</body
